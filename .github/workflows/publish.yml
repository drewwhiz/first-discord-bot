name: Publish

on:
  pull_request_target:
    types:
      - closed
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    name: Publish
    if: github.event.pull_request.merged == true
    runs-on: self-hosted
    strategy:
      matrix:
          node-version: [22.x]
          # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    permissions:
      contents: write
      packages: write
      actions: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.VERSION_BUMPER_APPID }}
          private-key: ${{ secrets.VERSION_BUMPER_SECRET }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Apply major version bump if indicated
        if: contains(github.event.pull_request.labels.*.name, 'major')
        run: npm version major
      - name: Apply minor version bump if indicated
        if: contains(github.event.pull_request.labels.*.name, 'minor')
        run: npm version minor
      - name: Apply patch version bump if no major or minor or if indicated
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') || (!contains(github.event.pull_request.labels.*.name, 'major') && !contains(github.event.pull_request.labels.*.name, 'minor')) }}
        run: npm version patch
      - name: Push changes
        run: git push
      - name: Push tags
        run: git push --tags
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Retrieve version
        run: |
          echo "TAG_NAME=$(git describe --abbrev=0)" >> $GITHUB_OUTPUT
        id: version
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: |
            latest
            ${{ steps.version.outputs.TAG_NAME }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true